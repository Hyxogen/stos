name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install packages (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y libavutil-dev libavformat-dev libavfilter-dev libavdevice-dev
      - name: Install pacakges (macOs)
        if: matrix.os == 'macos-latest'
        run: brew install ffmpeg pkg-config
      - name: Install pacakges (windows)
        if: matrix.os == 'windows-latest'
        run: |
          wget -Uri https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z -OutFile ffmpeg.7z
          7z x ffmpeg.7z
      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          $env:FFMPEG_DIR = "$(Get-Location)\ffmpeg-6.0-full_build-shared"; cargo build --verbose
          cp "$(Get-Location)\ffmpeg-6.0-full_build-shared\bin\*" 'target\debug\' 
      - name: Build (Unix)
        if: matrix.os != 'windows-latest'
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
